import stringify from 'fast-safe-stringify';
import { createColors } from 'colorette';
import dayjs from 'dayjs';
import { createWriteStream } from 'fs';
import { LoggerData } from '../types/internal';
import Transport from '../utils/transport';
import { escaperSingle } from '../utils/escaper';
import { LoggerLevel, TransportOptionsBase } from '../types/common';

type FileTransportConfig = {
  filename?: 'default' | (() => string);
  time?: string;
  ext?: string;
  dir: string;
};

const DEFAULT_OPTIONS: Required<Omit<FileTransportConfig, 'dir'>> = {
  filename: 'default',
  time: 'YY-M-D',
  ext: '.log'
};

export class FileTransport extends Transport<FileTransportConfig> {
  constructor(options: FileTransportConfig & TransportOptionsBase) {
    super(options ?? DEFAULT_OPTIONS);
  }

  list = new Set();

  filename() {
    return `${dayjs().format(this.options.time ?? DEFAULT_OPTIONS.time)}${this.options.ext ?? DEFAULT_OPTIONS.ext}`;
  }

  // handle(data: LoggerData) {}
}

export default FileTransport;
